{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\OneDrive\\\\Desktop\\\\Contact-Keeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_ALERT, SET_CURRENT, UPDATE_CONTACT, FILTER_CONTACT, CLEAR_FILTER, CLEAR_CURRENT, CONTACT_ERRORS } from '../type';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //Add Contact\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERRORS\n      });\n\n      payload: err.response.msg;\n    }\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACT,\n      payload: text\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["C:/Users/rohit/OneDrive/Desktop/Contact-Keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_ALERT","SET_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_FILTER","CLEAR_CURRENT","CONTACT_ERRORS","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","config","headers","res","post","type","payload","err","response","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\nimport {\r\n    ADD_CONTACT,\r\n    DELETE_CONTACT,\r\n    SET_ALERT,\r\n    SET_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACT,\r\n    CLEAR_FILTER,\r\n    CLEAR_CURRENT,\r\n    CONTACT_ERRORS\r\n} from '../type';\r\n\r\nconst ContactState = props => {\r\n    const initialState = {\r\n        contacts: [],\r\n        current: null,\r\n        filtered: null\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n    //Add Contact\r\n    const addContact = async contact => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/contacts', contact, config);\r\n            dispatch({ type: ADD_CONTACT, payload: res });\r\n        } catch (err) {\r\n            dispatch({ type: CONTACT_ERRORS });\r\n            payload: err.response.msg;\r\n        }\r\n\r\n    }\r\n\r\n    // Delete Contact\r\n\r\n    const deleteContact = id => {\r\n        dispatch({ type: DELETE_CONTACT, payload: id });\r\n    }\r\n    // Set Current Contact\r\n    const setCurrent = contact => {\r\n        dispatch({ type: SET_CURRENT, payload: contact });\r\n    }\r\n\r\n    //Clear Current Contact\r\n    const clearCurrent = () => {\r\n        dispatch({ type: CLEAR_CURRENT });\r\n    }\r\n\r\n    //Update Contact\r\n    const updateContact = contact => {\r\n        dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n    }\r\n\r\n    //Filter Contacts\r\n\r\n    const filterContacts = text => {\r\n        dispatch({ type: FILTER_CONTACT, payload: text });\r\n    }\r\n    //Clear Filter\r\n    const clearFilter = () => {\r\n        dispatch({ type: CLEAR_FILTER });\r\n    }\r\n\r\n    return (\r\n        <ContactContext.Provider\r\n            value={{\r\n                contacts: state.contacts,\r\n                current: state.current,\r\n                filtered: state.filtered,\r\n                addContact,\r\n                deleteContact,\r\n                setCurrent,\r\n                clearCurrent,\r\n                updateContact,\r\n                filterContacts,\r\n                clearFilter\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ContactContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}